What the fuck am I doing?

What am I making? A noise visualizer. I will visualize my noise, and also perlin noise.
I also want to see if I was right about perlin noise justing being my noise, but with a 
tilting table (i.e visualize the table).

I guess program will need to be 3D and 2D. 2D for 1D and 2D noise, and 3D for 3D noise.

Ok, I'm starting to think this won't be some quick 1-3 day project, maybe, but it seems like 
it will take, it shouldn't take more then 2 weeks. I doubt it should even take more then 1 week.

Tasks - Expected Time
--------------------------
Setting up OpenGL program - 1-3 days
Adding noise visualization - 1-3 days

Total: 2-6 days (~1 week)

Thats if I work hard! Should I drop everything else? IDK. 

Should I start from scratch, or pig back off some other project I've made, or other peoples code?
I could. Making it from scratch shouldn't be too hard, and it would build my skills up too. I think 
I should, and want to, build it from scratch. So it will use OpenGL, GLFW, and GLM (main dependencies).

What else am I working on right now?
- Going through 6837 lectures
- 3200 A2 

What do I get out of doing this?
- Implement and practice noise
    - Will be able to build minecraft clone
- Practice programming skills
    - Build a program from scratch, 100% on my own.
- Cool unique project to show off! 

HELL YEAH!

-----------------------------------------------------------------------------------------------------------------

What am I building?
- 2D visualization: 
    - 1D perlin noise, value noise, octave noise
- 3D visualization:
    - 2D perlin, value, and octave
    - 3D perlin, value, and octave
- Text that says what going on
- Users can input to change what they see

What it won't have
- a movable camera (some default)

Alright, lets start? Yes. Where? What? 

To Do:
- Hello world
- Window opening
- Drawing hello triangle
- Set up shaders
- VBOs / geometry renders (cuboids, planes, lines, text, squares)


What should window do?
    - Should it also handle input? Not handle, but make it eaisly
      accesible?
    - error_callback for glfw?

The window is opening and staying open! Now what? Need to start rendering shit. Lets first start in 2D.
First, need to import the shaders. The geometric renders will need them! First, lets render a square. I guess
orthogrphic will be fine first. THE PLAN: set up the geomtric renderes, then I can start working on the noise shit (The good shit).

How to the shader? NLG, I just want to copy & paste it from some other project that has a Shader class.

Shit is going good! Shader class is tested! I'm going on break soon. Should I? Yes, a quick 10m break. NO YT, music sure, but no videos.
What to do next? Render a square.


Where am I going? I think I should aim for visualizing the 1D noise first.First, off. I could just copy and past in line, and square from AI 
project like I copied the Shader class. Should I? How about I add copy over Square, refactor and clean it up. Then I draw a square. To see 
everything is working (shaders, and square). 

Fuck squares!

LINE: could refactor out model matrix.

Refactoring Ideas:
    - refactor out model matrix in LineRender
    - Move "main loop" out of window? Move it to main, just have globales?
    - "FREE" shit? in main?

Going on 5min break very soon. What? Keep working on this shit. This refactoring is much better. The window is juts one compoennt of this
prograrm. Their is no one compoenent that should contrl the others, execapt main which is best fit for now wher ethe compoents gather 
to work togehters! KEep at it. Quick piss & tea break!

No clue what to do next! 

Steps:
    implement noise
    then just sample points from it
    use sampled points to create lines
    draw lines to screen

All noise will need to be 'seededed'

Noise
    construct(seed)
    sample(x)

ValueNoise1D
    construct(seed)
    sample(x)

I think I have to go to dinner now. I'll go eat, then come back to work straight away. Still needed to finish this crank (1h left), and do 1 final one!

Its 841pm. I have 1D value noise. Feelt like giving up once I saw that gourges cubic graph, LOOK AT THIS GRAPH! Fuck! Now what? 
Well, IDK. I just WELL DESERVED BREAK TIME! 


-------------------------------------------------------------------------------------------------------------------------------------------------------------------


I have no clue what I'm doing. Lets just try what I think is best. 

I need to fix the noise shit.
Options:
    - Just return a list that contains sample points over some interval w/ some dx.
      With this, user can just call it once, and no redo of caluclations. I think this is best.
    - Or, I could have user sample over inteverals of size 1 (2 - 1 = 1, 3 - 2 = 1). I would be recauluting the same thing over and over,
      but would be better approach over what I have now.
    - Stick with what I have now, which is very infeffecient, so many reduntandt calculations constantly doing the same cacullation over and over again.
I think the choice is clear.

FUCK!!! This shit is hard, and its some random math shit, not the actual noise shit, its about sampling. IDK. I think I figured osmething out after 1.5 hours, I guess
thats good, though. I found a solution I'm somewhat happy with even if it was a fucking pain and tediuos. Anywyas, I think more about it after this 5min break.

V(-1)---------------------------------------------------------------------------------------------
interval
dx = ...  
samples_per_sub_interval = ? [sub_start, sub_end), sample start of interval but not end (else duplicates!)


list

for (i = start; i <= end; i++)
  calculate the cubic
  x = i
  for (i = 0; i < samples_per_interval; i++)
    x += dx * i
    sample(x)
    add to sample poitn to list 

  if (i == end)
    x += dx
    sample last point
Will miss very last sample point with this algo!


Hope to god it sampled the correct number of points.
Could also assert.

V1----------------------------------
list sample(start, end, count)
  length = end - start
  dx = (length) / (count - 1)

  list[]

  x_frac = 0
  for (int i = start; i <= end; i++)
    cubic = createCubic(i)
    
    while (x_frac < 1) # [i,i+1) # Don't sample end!
      sample_point = cubic(x_frac)
      list.add(sample_point)
      x_frac += dx

V2----------------------------------------
list sample(start, end, count)
  length = end - start
  dx = (length) / (count - 1)

  list[count]

  i = 0;
  x_int = start;
  x_dec = 0;
  while (i < count)
    cubic = createCubic(x_int)

    while (x_dec < 1) # [x_int, x_int+1)
      sample_point = sample(cubic, x_dec)
      x_dec += dx;
      list[i] = sample_point;
      i++;
    
    x_dec = x_dec - 1.0f # left over fraction
    x_int++

WHAT A PAIN this shit was, not sure it was even worth it. I WAS OPTIMIZING IT SO THAT we only deal with floats that aren't too big.
With tihs algo the floats will always be ~1 or <1! WHY? I barely know about htis floating point shit, ok I do have some experince.

Alright. I'm going on break soon. Lets just take a quick 10 min break. Don't take too long, and relaxe! What to do when I come back?
Talk to chatGPT about my code, see if theirs anything too wrong iwth it. Then IDK, figure it out then.

Feel like shit. Anyways, I think I should focus on code readablity instead of optimizations, atleast when the performance is not < 15FPS.
So, focus on readibilty, that easier to code to, and fix.

Shit is very hard, doesn't help that I'm also in a bit of pain, fuck.


I think I can add octave noise now.

octave(x)

  octaves = ?
  freq = 2
  persitance = ?

  for i = 0 to octaves:
    total = sample(x * 2^(i)) * (perstiance ^ (octaves))

